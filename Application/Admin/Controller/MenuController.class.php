<?php
/**
 * Created by PhpStorm.
 * User: lxwn
 * Date: 2018/5/10
 * Time: 下午12:08
 */

namespace Admin\Controller;

class MenuController extends AdminBaseController
{
	public function _initialize()
	{
		parent::_initialize(); // TODO: Change the autogenerated stub
	}

	public function index()
	{
		$this->display();
	}

	public function addMenuPage()
	{
		$ico_info   =   $this->getIco('json');
		$menu_one   =   M('menu')->where("level=1")->order("sort desc")->select();
		$role_info  =   M('role')->where("type<>1")->select();
		$this->assign('menu_one',json_encode($menu_one));
		$this->assign('ico_info',$ico_info);
		$this->assign('role_info',$role_info);
		$this->display();
	}

	public function updateMenuPage()
	{
		$menu_id                =   I('get.menu_id');

		if (empty($menu_id)) {
			$this->newRedirect('index',[], 1, 99999);
		}

		$menu_info              =   M('menu')->where("id={$menu_id}")->find();

		if (empty($menu_id)) {
			$this->newRedirect('index', [], 1, 40000);
		}


		$menu_info['role_id']   =   json_decode($menu_info['role_id'],true);
		$menu_one               =   M('menu')->where("level=1")->order("sort desc")->select();
		$role_info              =   M('role')->where("type<>1")->select();
		$ico_info               =   $this->getIco('json');

		$this->assign('menu_one',json_encode($menu_one));
		$this->assign('ico_info',$ico_info);
		$this->assign('data',$menu_info);
		$this->assign('role_info',$role_info);
		$this->display();

	}

	public function ajaxAddMenu()
	{
		$data                   =   I('post.');
		$field_arr              =   ['level','name','jump','ico','sort'];

		if (($data['level'] == 2) && (empty($data['parent_id']))) {
			$this->output(99999);
		}

		if (checkFieldBeEmpty($data, $field_arr, $msg)) {
			$this->output($msg);
		}

		$data['create_time']    =   date('Y-m-d H:i:s');
		$data['role_id']        =   json_encode($data['role_id']);
//		$data['jump']           =   strtolower($data['jump']);
		$result                 =   M('menu')->add($data);
		$this->refreshMenu($this->getCache($this->user_id_field));
		$result                 ?   $this->output(1)    :   $this->output(40000);
	}

	public function ajaxDelMenu()
	{
		$menu_id                =   I('get.menu_id');

		if (empty($menu_id)) {
			$this->output(99999);
		}

		$menu_model             =   M('menu');

		$menu_info              =   $menu_model->where("id={$menu_id}")->find();

		if (empty($menu_info)) {
			$this->output(40000);
		}

		$result                 =   $menu_model->where("id={$menu_id} or parent_id={$menu_id}")->delete();

		$this->refreshMenu($this->getCache($this->user_id_field));
		$result                 ?   $this->output(1)    :   $this->output(40000);

	}

	public function ajaxUpdateMenu()
	{
		$data                   =   I('post.');
		$field_arr              =   ['level','name','jump','ico','sort','id'];

		if (($data['level'] == 2) && (empty($data['parent_id']))) {
			$this->output(99999);
		}

		if (checkFieldBeEmpty($data, $field_arr, $msg)) {
			$this->output($msg);
		}

		$menu_info              =   M('menu')->where("id={$data['id']}")->find();


		if (empty($menu_info)) {
			$this->output(40000);
		}

		$data['role_id']        =   json_encode($data['role_id']);
//		$data['jump']           =   strtolower($data['jump']);
		$result                 =   M('menu')->where("id={$data['id']}")->save($data);

		$this->refreshMenu($this->getCache($this->user_id_field));
		$result                 ?   $this->output(1)    :   $this->output(40000);
	}
}