<?php
/**
 * Created by PhpStorm.
 * User: lxwn
 * Date: 2018/5/16
 * Time: 上午11:11
 */

namespace Admin\Controller;

class AuthorityController extends AdminBaseController
{
	public function _initialize()
	{
		parent::_initialize(); // TODO: Change the autogenerated stub
	}

	public function index()
	{

		$authority_info =   M('authority')->select();

		foreach ($authority_info as $k=>&$v) {
			$v['jump_arr']  =   json_decode($v['jump'],true);
		}

		$this->assign('data',$authority_info);
		$this->display();
	}

	public function addAuthorityPage()
	{
		$this->display();
	}

	public function updateAuthorityPage()
	{
		$id             =   I('get.id');

		if (empty($id)) {
			$this->newRedirect('index',[],1,99999);
		}

		$authority_info =   M('authority')->where("id={$id}")->find();

		if (empty($authority_info)) {
			$this->newRedirect('index',[],1,70002);
		}

		$authority_info['jump'] =   json_decode($authority_info['jump'],true);
		$this->assign('data', $authority_info);
		$this->display();
	}

	public function ajaxAddAuthority()
	{
		$jump_arr           =   I('post.jump');
		$name               =   I('post.name');

		if (empty($jump_arr) || empty($name)) {
			$this->output(99999);
		}

		foreach($jump_arr as $k=>&$v){
			$v              =   strtolower($v);
		}

		$data               =   array(
			'name'          =>  $name,
			'jump'          =>  json_encode($jump_arr),
			'create_time'   =>  date('Y-m-d H:i:s'),
		);

		$result             =   M('authority')->add($data);

		$this->refreshAuthority($this->getCache($this->user_id_field));

		$result             ?   $this->output(1)    :   $this->output(40000);

	}

	public function ajaxUpdateAuthority()
	{
		$id             =   I('post.id');
		$name           =   I('post.name');
		$jump_arr       =   I('post.jump');

		if (empty($id) || empty($name) || empty($jump_arr)) {
			$this->output(99999);
		}

		$authority_info =   M('authority')->where("id={$id}")->find();

		if (empty($authority_info)) {
			$this->output(70002);
		}

		foreach ($jump_arr as $k=>&$v) {
			$v          =   strtolower($v);
		}

		$data           =   array(
			'name'      =>  $name,
			'jump'      =>  json_encode($jump_arr),
		);

		$result         =   M('authority')->where("id={$id}")->save($data);

		$this->refreshAuthority($this->getCache($this->user_id_field));

		$result         ?   $this->output(1)    :   $this->output(40000);

	}

	public function ajaxDelAuthority()
	{
		$id             =   I('get.id');

		if (empty($id)) {
			$this->output(99999);
		}
		$where          =   "id={$id}";
		$info           =   M('authority')->where($where)->find();

		if (empty($info)){
			$this->output(70002);
		}

		$result         =   M('authority')->where($where)->delete();

		$this->refreshAuthority($this->getCache($this->user_id_field));

		$result         ?   $this->output(1)    :   $this->output(40000);
	}
}