<?php
/**
 * Created by PhpStorm.
 * User: lxwn
 * Date: 2018/5/17
 * Time: 上午10:21
 */

namespace Admin\Controller;

class UserController extends AdminBaseController
{
	public function _initialize()
	{
		parent::_initialize(); // TODO: Change the autogenerated stub
	}

	public function index(){

		$user_info          =   M('admin_user')->where("type<>1")->select();

		foreach($user_info as $k=>&$v){
			$role_arr       =   json_decode($v['role_id'],true);
			$v['role_info'] =   M('role')->where(array('id'=>['in',$role_arr]))->getField('name',true);
		}

		$this->assign('data',$user_info);
		$this->display();
	}

	public function addUserPage()
	{
		$role_info          =   M('role')->where("type<>1")->select();

		$p_info             =   D('XcxExploitCity')->getExploitProvince();
		$c_info             =   D('XcxExploitCity')->getExploitCity();

		$this->assign('json_city',json_encode($c_info));
		$this->assign('p_info',$p_info);
		$this->assign('role_info',$role_info);
		$this->display();
	}

	public function updateUserPage()
	{
		$id                     =   I('get.id');

		if (empty($id)) {
			$this->output(99999);
		}

		$user_info              =   M('admin_user')->where("id={$id}")->find();

		if (empty($user_info)) {
			$this->output(70002);
		}

		$user_info['role_info'] =   json_decode($user_info['role_id'], true);

		$role_info              =   M('role')->where('type<>1')->select();
		$p_info             =   D('XcxExploitCity')->getExploitProvince();
		$c_info             =   D('XcxExploitCity')->getExploitCity();

		$this->assign('json_city',json_encode($c_info));
		$this->assign('p_info',$p_info);
		$this->assign('c_info',$c_info);
		$this->assign('data', $user_info);
		$this->assign('role_info', $role_info);
		$this->display();
	}

	public function ajaxAddUser()
	{
		$data               =   I('post.');
		$field_arr          =   ['account','password','role_id'];

		if (checkFieldBeEmpty($data,$field_arr,$msg)) {
			$this->output($msg);
		}

		$account_info       =   M('admin_user')->where("account='{$data['account']}'")->find();

		if ($account_info) {
			$this->output(80002);
		}

		$data['create_time']=   date('Y-m-d H:i:s');
		$data['password']   =   md5($data['password']);
		$data['type']       =   2;
		$data['role_id']    =   json_encode($data['role_id']);

		$result             =   M('admin_user')->add($data);

		$result             ?   $this->output(1)    :   $this->output(40000);
	}

	public function ajaxUpdateUser()
	{
		$data                   =   I('post.');
		$field_arr              =   ['role_id','id'];

		if (checkFieldBeEmpty($data,$field_arr,$msg)) {
			$this->output($msg);
		}

		$where                  =   "id={$data['id']}";

		$user_info              =   M('admin_user')->where($where)->find();

		if (empty($user_info)) {
			$this->output(70002);
		}

		unset($data['account']);
		$data['role_id']        =   json_encode($data['role_id']);

		if (empty($data['password'])) {
			unset($data['password']);
		} else {
			$data['password']   =   md5($data['password']);
		}

		$result                 =  M('admin_user')->where($where)->save($data);

		$result                 ?   $this->output(1)    :   $this->output(40000);


	}

	public function ajaxDelUser()
	{
		$id         =   I('get.id');

		if (empty($id)) {
			$this->output(99999);
		}
		$where      =   "id={$id}";
		$user_info  =   M('admin_user')->where($where)->find();

		if (empty($user_info)) {
			$this->output(70002);
		}

		$result    =  M('admin_user')->where($where)->delete();

		$result    ?   $this->output(1)    :   $this->output(40000);
	}
}