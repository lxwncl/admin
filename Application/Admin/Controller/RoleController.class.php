<?php
/**
 * Created by PhpStorm.
 * User: lxwn
 * Date: 2018/5/16
 * Time: 上午11:12
 */

namespace Admin\Controller;

class RoleController extends AdminBaseController
{
	public function _initialize()
	{
		parent::_initialize(); // TODO: Change the autogenerated stub
	}

	public function index()
	{
		$role_info              =   M('role')->where("type=2")->select();
		foreach ($role_info as $k=>&$v) {
			$authority_id       =   json_decode($v['authority_id'],true);
			$authority_str_id   =   implode(',',$authority_id);
			$authority_str_id   =   $authority_str_id   ?   $authority_str_id   :   0;
			$v['authority_info']=   M('authority')->where("id in ({$authority_str_id})")->getField('name',true);
		}
		$this->assign('data',$role_info);
		$this->display();
	}

	public function addRolePage()
	{
		$authority_info         =   M('authority')->select();
		$this->assign('authority_info',$authority_info);
		$this->display();
	}

	public function updateRolePage()
	{
		$id                     =   I('get.id');

		if (empty($id)) {
			$this->output(99999);
		}

		$role_info              =   M('role')->where("id={$id}")->find();

		if (empty($role_info)) {
			$this->output(70002);
		}

		$authority_id               =   json_decode($role_info['authority_id'],true);
		$role_info['authority_arr'] =   $authority_id;
		$authority_info             =   M('authority')->select();

		$this->assign('authority_info',$authority_info);
		$this->assign('data',$role_info);
		$this->display();
	}

	public function ajaxAddRole()
	{
		$name                   =   I('post.name');
		$authority_id           =   I('post.authority_id');

		if (empty($name) && empty($authority_id)) {
			$this->output(99999);
		}

		$data                   =   array(
			'name'              =>  $name,
			'authority_id'      =>  json_encode($authority_id),
			'type'              =>  2,
			'create_time'       =>  date('Y-m-d H:i:s'),
		);

		$result                 =   M('role')->add($data);

		$this->refreshAuthority($this->getCache($this->user_id_field));

		$result                 ?   $this->output(1)    :   $this->output(40000);

	}

	public function ajaxUpdateRole()
	{
		$name                   =   I('post.name');
		$authority_id           =   I('post.authority_id');
		$id                     =   I('post.id');

		if (empty($name) && empty($authority_id) || empty($id)) {
			$this->output(99999);
		}

		$where                  =   "id={$id}";
		$role_info              =   M('role')->where($where)->find();

		if (empty($role_info)) {
			$this->output(70002);
		}

		$data                   =   array(
			'name'              =>  $name,
			'authority_id'      =>  json_encode($authority_id),
		);

		$result                 =   M('role')->where($where)->save($data);

		$this->refreshAuthority($this->getCache($this->user_id_field));

		$result                 ?   $this->output(1)    :   $this->output(40000);
	}

	public function ajaxDelRole()
	{
		$id                     =   I('get.id');

		if (empty($id)) {
			$this->output(99999);
		}

		$where                  =   "id={$id}";

		$role_info              =    M('role')->where($where)->find();

		if (empty($role_info)) {
			$this->output(70002);
		}

		$result                 =   M('role')->where($where)->delete();

		$this->refreshAuthority($this->getCache($this->user_id_field));

		$result                 ?   $this->output(1)    :   $this->output(40000);
	}
}